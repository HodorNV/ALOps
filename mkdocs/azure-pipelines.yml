# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
  - name: 'projectname'
    value: 'ALOps_Docs'

trigger:
- mkdocs

pool:
  name: ALOPS-MKDOCS

steps:
- task: PowerShell@2
  displayName: 'Build Documentation'
  inputs:
    targetType: 'inline'
    script: |
      $SourceFolder = $env:SYSTEM_DEFAULTWORKINGDIRECTORY

      $StepFiles = Get-ChildItem -Path "$($SourceFolder)\mkdocs\docs\ALOpsSteps\v*\*.md" -Recurse

      $SourceFiles = Get-ChildItem -Path "$SourceFolder\mkdocs" -Filter "*.md" -Recurse
      foreach($SourceFile in $SourceFiles)
      {
          $Content = Get-Content -Path $SourceFile.FullName -Raw 

          foreach($StepFile in $StepFiles){
              $StepContent = Get-Content -Path $StepFile.FullName -Raw 
              $Content = $Content.Replace("!INCLUDE ""$($StepFile.Name)""",$StepContent)
          }

          $Content | Set-Content -Path $SourceFile.FullName -Encoding UTF8 -Confirm:$false -Force:$true
      }      

      Set-Location "$($SourceFolder)\mkdocs"
      
      mkdocs build --site-dir "$(System.ArtifactsDirectory)"

- task: CopyFiles@2
  displayName: 'Deploy dev.docs.alops.be'
  condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/master'))
  inputs:
    SourceFolder: '$(System.ArtifactsDirectory)'
    Contents: '**'
    TargetFolder: 'D:\MKDOCS.IIS\docs.alops.be\dev\'
    CleanTargetFolder: true
    OverWrite: true

- task: ArchiveFiles@2
  displayName: 'Create Artifact'
  inputs:
    rootFolderOrFile: '$(System.ArtifactsDirectory)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(System.ArtifactsDirectory)/$(projectname)_$(Build.BuildId).zip'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(System.ArtifactsDirectory)/$(projectname)_$(Build.BuildId).zip'
    ArtifactName: 'drop'
    publishLocation: 'Container'